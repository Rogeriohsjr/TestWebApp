# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    codeCoverageEnabled: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Team Tools\Dynamic Code Coverage Tools"
      ls

- task: CoverageConverter@0
  inputs:
    samplestring: 'TestRogerio'
    coverageFileLocation: '**/*.coverage'
    codeCoverageExeFileLocation: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Team Tools\Dynamic Code Coverage Tools\CodeCoverage.exe'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      cd "$(Agent.TempDirectory)\TestResults"
      ls

- task: reportgenerator@4
  displayName: 'Generate Coverage Report'
  inputs:
    reports: '$(Agent.TempDirectory)\TestResults\DynamicCodeCoverage.coveragexml'
    targetdir: '$(System.DefaultWorkingDirectory)\TestResults\Coverage\Reports'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      cd "$(System.DefaultWorkingDirectory)\TestResults\Coverage\Reports"
      ls

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Coverage Report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.TempDirectory)\TestResults\DynamicCodeCoverage.coveragexml'


- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      cd "$(System.DefaultWorkingDirectory)\TestResults\Coverage"
      ls